<%-include('../confing/header')%>

<div class="form-group">　
    <select name="prefec" id="prefec">県名を選択
    </select>
    <button id="move_another">移動</button>
</div>
<script>
    let p_numbers = [];
    for(let i=0; i<48; i++){p_numbers.push(('0' + i).slice(-2));}

    let p_names = ['全国','北海道','青森県','岩手県','宮城県','秋田県','山形県','福島県','茨城県','栃木県','群馬県','埼玉県','千葉県',
        '東京都','神奈川県','新潟県','富山県','石川県','福井県','山梨県','長野県','岐阜県','静岡県','愛知県','三重県',
        '滋賀県','京都府','大阪府','兵庫県','奈良県','和歌山県','鳥取県','島根県','岡山県','広島県','山口県','徳島県',
        '香川県','愛媛県','高知県','福岡県','佐賀県','長崎県','熊本県','大分県','宮崎県','鹿児島','沖縄県']

    for(let i=0; i<p_numbers.length; i++){
        $('select#prefec').append('<option value=' +p_numbers[i]+ '>' +p_names[i]+ '</option>');
    }
</script>

<div class="form-group">
    <label for="d_select">　y軸を選択:</label>
    <select name="d_select" id="d_select">
        <option value="b,patient,療養者数">療養者数</option>
        <option value="b,inpatient,入院者数">入院者数</option>
        <option value="b,inroom,宿泊施設療養者数">宿泊施設療養者数</option>
        <option value="b,inhome,自宅療養者数">自宅療養者数</option>
        <option value="b,wait,療養先調整中の人数">療養先調整中の人数</option>
        <option value="b,inpatient_sev,重症者数">重症者数</option>
        <option value="b,bed_kakuho,確保病床数">確保病床数</option>
        <option value="b,bed_sokuou,即応病床数">即応病床数</option>
        <option value="b,bed_sev_kakuho,重症者専用確保病床数">重症者専用確保病床数</option>
        <option value="b,bed_sev_sokuou,重症者専用即応病床数">重症者専用即応病床数</option>
    </select>
    <button id="update_g">グラフ更新</button>
</div>


<!-- グラフ -->
<div class="wrapper" style="height: 80%; width: 80%;">
    <canvas id="chart1" width="150" height="100" ></canvas>
</div>





<script>
    //データ設定
    let datatext = '<%-datatext1%>';
    let data =JSON.parse(datatext);
    let poptext = '<%-datatext2%>';
    let data_popu = JSON.parse(poptext);
    let bedseriestext = '<%-datatext3%>';
    let data_bedseries =JSON.parse(bedseriestext);
    let p_number = '00'
    console.log(data_popu[p_number]);
    console.log(data_bedseries['bed_210915'][p_number]);
    //console.log(data_bedseries);

    let select1; let select2;
    if(p_number=='00'){
        select1 = $.grep(data, function(obj){return obj.status==1});
        select2 = $.grep(data, function(obj){return obj.status==2});
    }else{
        select1 = $.grep(data, function(obj){return obj.status==1 && obj.prefecture==p_number});
        select2 = $.grep(data, function(obj){return obj.status==2 && obj.prefecture==p_number});
    }

    //初期設定
    let label_p = [];
    let data_p = [];
    let dvs = ['b','patient','療養者数'];

    //グラフ表示
    bargraph_prefecture($("#chart1"));

    $("#update_g").click(function(){
        dvs = $("select#d_select").val(); dvs = dvs.split(',');
        bargraph_prefecture($("#chart1"));
    })


    //移動
    $("#move_another").click(function(){
        p_number = $("select#prefec").val();
        bargraph_prefecture($("#chart1"));
    })
    $("select#prefec").val(p_number);


    function bargraph_prefecture(where){
        label = [];
        data_inp = []; let data_inr = []; let data_inh = []; let data_wai = [];

        data_p = [];
        for(let key in data_bedseries){
            let yymmdd = key.substr(4,6);
            label.push(yymmdd);
            data_p.push(data_bedseries[key][p_number][dvs[1]]);
        }
        // for(let key in data_bedseries){
        //     let yymmdd = key.substr(4,6);
        //     label.push(yymmdd);
        //     data_inp.push(data_bedseries[key][p_number]['inpatient']);
        //     data_inr.push(data_bedseries[key][p_number]['inroom']);
        //     data_inh.push(data_bedseries[key][p_number]['inhome']);
        //     data_wai.push(data_bedseries[key][p_number]['wait']);
        // }

        let datas = {
            labels: label,
            datasets: [
                {
                label:dvs[2],
                data:data_p,
                backgroundColor: "rgba(250, 50, 50, 0)",borderColor: "rgba(200, 50, 50, 0.3)",
            },
            // {
            //     label:'自宅療養者',
            //     data:data_inh,
            //     backgroundColor: "rgba(50, 250, 50, 0.7)",borderColor: "rgba(50, 250, 50, 0.7)",
            // },{
            //     label:'療養先調整中',
            //     data:data_wai,
            //     backgroundColor: "rgba(200, 50, 200, 0.7)",borderColor: "rgba(200, 50, 200, 0.7)",
            // },{
            //     label:'宿泊施設療養者',
            //     data:data_inr,
            //     backgroundColor: "rgba(50, 200, 200, 0.7)",borderColor: "rgba(50, 200, 200, 0.7)",
            // },{
            //     label:'入院者数',
            //     data:data_inp,
            //     backgroundColor: "rgba(250, 50, 50, 0.9)",borderColor: "rgba(250, 50, 50, 0.9)",
            // }
        ]
        }

        let opt = {      
            title:{text:'(' + data_popu[p_number]["name"] + ')', display:true},
            scaleOverride : true,  animation : false,  showTooltips: false,  pointDot : false,  bezierCurve : false,
            legend: {display: true, align: 'start',position: 'top',},
            scales: {
                xAxes: [{       
                    scaleLabel: {display: true, labelString: '年月日'},   
                    type: 'time',
                    time: {parser: 'YYMMDD', unit: 'day', stepSize: 1, displayFormats: {'hour': 'MM-DD'}},
                    stacked: true, 
                }],
                yAxes: [{
                    position: "left", 
                    scaleLabel: {display: true, labelString: '人数'},
                    ticks: { min:0, callback: function(value, index, values){return  value +  '人'}},
                    stacked: true, 
                }]
            }
        };
        let graph1 = new Chart(where, {
            data:datas, 
            type:'line', 
            options:opt
        });
    }


    
    function bedgraph(where){

        let titletext = 'ワクチン接種完了人口(' + data_popu[p_number]["name"] + ')';

        let datas_p4 = {
            labels: ['療養者数','確保病床数'],
            datasets: [{
                label:'入院者',
                data:[data_bed[p_number]['inpatient'],undefined],
                backgroundColor: "rgba(250, 50, 50, 0.9)",borderColor: "rgba(250, 50, 50, 0.9)",
            },{
                label:'宿泊施設療養者',
                data:[data_bed[p_number]['inroom'],undefined],
                backgroundColor: "rgba(200, 50, 200, 0.7)",borderColor: "rgba(200, 50, 200, 0.7)",
            },{
                label:'療養先調整中',
                data:[data_bed[p_number]['wait'],undefined],
                backgroundColor: "rgba(50, 200, 200, 0.7)",borderColor: "rgba(50, 200, 200, 0.7)",
            },{
                label:'自宅療養者',
                data:[data_bed[p_number]['inhome'],undefined],
                backgroundColor: "rgba(50, 250, 50, 0.7)",borderColor: "rgba(50, 250, 50, 0.7)",
            },{
                label:'確保病床数',
                data:[undefined,data_bed[p_number]['bed_kakuho']],
                backgroundColor: "rgba(250, 30, 50, 0.6)",borderColor: "rgba(250, 30, 50, 0.6)",
            }]
        };

        let opt_p4 = {      
            title:{text:titletext, display:true},
            scaleOverride : true,  animation : false,  showTooltips: false,  pointDot : false,  bezierCurve : false,
            legend: {display: true, align: 'start',position: 'top',labels:{
                filter: function(items) {return items.text != '確保病床数';}
                                      // return items.datasetIndex != 5;
            }},
            scales: {
                yAxes: [{stacked: true}],
                xAxes: [{
                    position: "left", 
                    scaleLabel: {display: true, labelString: '人数'},
                    ticks: { min:0, callback: function(value, index, values){return  value +  '人'}},
                    stacked: true, 
                }]
            }
        };  


        let graph4 = new Chart(where, {
            data:datas_p4, 
            type:'horizontalBar', 
            options:opt_p4
        });
    }

    


</script>


<%-include('../confing/footer')%>

